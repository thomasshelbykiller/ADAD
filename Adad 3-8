

practical 3 

Write a program to perform validation of form using Angular.js

welcome.html

<!DOCTYPE html>
<html>

<head>
	<title>Welcome </title>
	<script src= "Scripts/angular.min.js"></script>
	<style src="Styles/Style.css"></style>
</head>

<body ng-app="WelcomeForm">
	
	<h3>Welcome Form</h3>	
        First Name : <p ng-bind="Fname"></p>
        Last Name : <p ng-bind="Lname"></p>
        User Name : <p ng-bind="username"></p>
        Password : <p ng-bind="userpassword"></p>
        Date of Birth : <p ng-bind="DOB"></p>
        Address : <p ng-bind="Address"></p>
		Email : <p ng-bind="Email"></p>
        Contact : <p ng-bind="Contact"></p>

        <!--
        <p> {{username}}</p>
        <p> {{userpassword}}</p> -->
</body>
</html>



index.html


<!DOCTYPE html>
<html>

<head>
	<title>AngularJS Form Validation</title>
	<script src= "Scripts/angular.min.js"></script>
	<style src="Styles/Style.css"></style>
</head>

<body ng-app="Form Validation">
	
	<h3>AngularJS Form Validation</h3>
	<form name="form1" method="post" action="Welcome.html">
		
		<p>First Name:
			<input name="Fname" type="text"
				ng-model="Fname" required>			
			<span ng-show="form1.Fname.$pristine && form1.Fname.$invalid">
				Required*.</span>
		</p>
		<p>Last Name:
			<input name="Lname" type="text"
				ng-model="Lname" required>			
			<span ng-show="form1.Lname.$pristine && form1.Lname.$invalid">
					Required*.</span>
		</p>
		<p>User Name:
			<input name="username" type="text"
				ng-model="username" required>
			<span ng-show="form1.username.$pristine && form1.username.$invalid">
				The name is required.</span>
		</p>
		<p>Password:
			<input name="userpassword" type="password"
				ng-model="userpassword" required>
			<span ng-show="form1.userpassword.$pristine && form1.userpassword.$invalid">
				Required*.</span>
		</p>
		<p>Date of Birth:
			<input name="DOB" type="datetime"
				ng-model="DOB" required>
			<span ng-show="form1.DOB.$pristine && form1.DOB.$invalid">
				The name is required.</span>
		</p>
		<p>Address:
			<input name="Address" type="text"
				ng-model="Address" required>
			<span ng-show="form1.Address.$pristine && form1.Address.$invalid">
				Required*.</span>
		</p>
		<p>Contact No.:
			<input name="Contact" type="number"
				ng-model="Contact" required>
			<span ng-show="form1.Contact.$pristine && form1.Contact.$invalid">
					Required*.</span>
		</p>
		<p>Email:
			<input name="Email" type="email"
				ng-model="Email" required>	
			<span ng-show="form1.Email.$pristine && form1.Email.$invalid">
					Required*.</span>			
		</p>
		
		<p><input name="Submit" type="submit" text="Submit"></p>
	</form>
	
</body>
</html>

Style.css


body 
{
	font-family: Arial, Helvetica, sans-serif;
}
h1 
{
	color: green;
}

index


<!DOCTYPE html>
<html>

<head>
	<title>AngularJS Form Validation</title>
	<script src=”https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js”></script>
	<script src= "Scripts/angular.min.js"></script>
	<style src="Styles/Style.css"></style>
</head>

<body ng-app="Form Validation">
	
	<h3>AngularJS Form Validation</h3>
	<form name="form1" method="post" action="Welcome.html">
		
		<p>First Name:
			<input name="Fname" type="text"
				ng-model="Fname" required>			
			<span ng-show="form1.Fname.$pristine && form1.Fname.$invalid">
				Required*.</span>
		</p>
		<p>Last Name:
			<input name="Lname" type="text"
				ng-model="Lname" required>			
			<span ng-show="form1.Lname.$pristine && form1.Lname.$invalid">
					Required*.</span>
		</p>
		<p>User Name:
			<input name="username" type="text"
				ng-model="username" required>
			<span ng-show="form1.username.$pristine && form1.username.$invalid">
				The name is required.</span>
		</p>
		<p>Password:
			<input name="userpassword" type="password"
				ng-model="userpassword" required>
			<span ng-show="form1.userpassword.$pristine && form1.userpassword.$invalid">
				Required*.</span>
		</p>
		<p>Date of Birth:
			<input name="DOB" type="datetime"
				ng-model="DOB" required>
			<span ng-show="form1.DOB.$pristine && form1.DOB.$invalid">
				The name is required.</span>
		</p>
		<p>Address:
			<input name="Address" type="text"
				ng-model="Address" required>
			<span ng-show="form1.Address.$pristine && form1.Address.$invalid">
				Required*.</span>
		</p>
		<p>Contact No.:
			<input name="Contact" type="number"
				ng-model="Contact" required>
			<span ng-show="form1.Contact.$pristine && form1.Contact.$invalid">
					Required*.</span>
		</p>
		<p>Email:
			<input name="Email" type="email"
				ng-model="Email" required>	
			<span ng-show="form1.Email.$pristine && form1.Email.$invalid">
					Required*.</span>			
		</p>
		
		<p><input name="Submit" type="submit" text="Submit"></p>
	</form>
	
</body>
</html>



welcome

<!DOCTYPE html>
<html>

<head>
	<title>Welcome </title>
<script src=”https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js”></script>
	<script src= "Scripts/angular.min.js"></script>
	<style src="Styles/Style.css"></style>
</head>

<body ng-app="WelcomeForm">
	
	<h3>Welcome Form</h3>	
        First Name : <p ng-bind="Fname"></p>
        Last Name : <p ng-bind="Lname"></p>
        User Name : <p ng-bind="username"></p>
        Password : <p ng-bind="userpassword"></p>
        Date of Birth : <p ng-bind="DOB"></p>
        Address : <p ng-bind="Address"></p>
		Email : <p ng-bind="Email"></p>
        Contact : <p ng-bind="Contact"></p>

        <!--
        <p> {{username}}</p>
        <p> {{userpassword}}</p> -->
</body>
</html>







Practical - 4
Aim : Write a program to create and implement modules and controllers in AngularJS.

File Name : Script.js


var myApp = angular.module("myModule", []);


myApp.controller("myController", function ($scope)
{
    var country =
    {
        name: "India",
        capital: "Delhi"                        
    };
    $scope.country = country;
});


File Name : CountryCapital.html

<!doctype html>
<html ng-app="myModule">
<head>
    <script src="Scripts/angular.js"></script>
    <script src="Scripts/CountryCapital.js"></script>
</head>

<body>
    <div ng-controller="myController">
        <div>
            Country : {{ country.name }}
        </div>
        <div>
            Capital : {{ country.capital }}
        </div>        
    </div>
</body>
</html>








Practical - 5


Aim : To implement Error Handling in AngularJS.

File Name : Script.js

angular.module('myApp', [])
  .factory('$exceptionHandler',
  function()
  {
    return function(exception, cause)
    {
      // Log the error to the console
      console.error(exception, cause);


      // Display a user-friendly error message
      alert('An error occurred: ' + exception.message);
    };
  });


File Name : ErrorHandling.html

<!DOCTYPE html>
<html ng-app="myApp">
<head>
  <meta charset="utf-8">
  <title>AngularJS Error Handling Demo</title>
 <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
  <script>
    angular.module('myApp', [])
      .factory('$exceptionHandler',
      function()
      {
        return function(exception, cause)
        {
          // Log the error to the console
          console.error(exception, cause);


          // Display a user-friendly error message
          alert('An error occurred: ' + exception.message);
        };
      });


    angular.module('myApp')
      .controller('myController', function($scope)
      {
        $scope.divide = function(dividend, divisor)
        {
          if (divisor === 0)
          {
            throw new Error('Cannot divide by zero');
          }
          return dividend / divisor;
        };
      });






Practical - 6 

Aim : Create an application for Customer / Students records using AngularJS

<!DOCTYPE html>
<html ng-app="customerApp">
<head>
    <title>Customer/Student Records</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
    <style>
        table {
            border-collapse: collapse;
            width: 100%;
        }
        th, td {
            text-align: left;
            padding: 8px;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #4CAF50;
            color: white;
        }
        tr:hover {
            background-color: #f5f5f5;
        }
    </style>
</head>
<body>
    <div ng-controller="customerController">
        <h1>Customer/Student Records</h1>
        <form>
            <label for="name">Name:</label>
            <input type="text" ng-model="newCustomer.name" required>
            <br>
            <label for="age">Age:</label>
            <input type="number" ng-model="newCustomer.age" required>
            <br>
            <label for="email">Email:</label>
            <input type="email" ng-model="newCustomer.email" required>
  <br>
            <label for="address">Address:</label>
            <textarea ng-model="newCustomer.address" required></textarea>
            <br>
            <button ng-click="addCustomer()">Add Customer/Student</button>
        </form>
        <br>
        <table>
            <tr>
                <th>Name</th>
                <th>Age</th>
                <th>Email</th>
                <th>Address</th>
            </tr>
            <tr ng-repeat="customer in customers">
                <td>{{customer.name}}</td>
                <td>{{customer.age}}</td>
                <td>{{customer.email}}</td>
                <td>{{customer.address}}</td>
            </tr>
        </table>
    </div>


    <script>
        var app = angular.module('customerApp', []);
        app.controller('customerController', function($scope) {
            $scope.customers = [
                {
                    name: 'Ram',
                    age: 25,
                    email: 'ram@gmail.com',
                    address: '123 S.V.Road, Malad'
                },
                {
                    name: 'Mohan',
                    age: 30,
                    email: 'mohan@gmail.com',
                    address: '456 Bajaj Road, Vile Parle'
                },
                {
                    name: 'Maya',
    age: 20,
                    email: 'maya@gmail.com',
                    address: '789 Nr. Silver Oak, Andheri'
                }
            ];
            $scope.newCustomer = {};
            $scope.addCustomer = function() {
                $scope.customers.push($scope.newCustomer);
                $scope.newCustomer = {};
            };
        });
    </script>
</body>
</html>








Practical - 7
Aim : Write a program to create a simple web application using Express, Node JS and AngularJS

Total No. of Files : 3
File Name : Server.js

const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');


const app = express();


app.use(bodyParser.json());
app.use(cors());


const comments = require('./comments.json');


app.get('/comments', (req, res) =>
{
  res.json(comments);
});


app.post('/comments', (req, res) =>
{
  const comment = req.body;
  comments.push(comment);
  res.json(comment);
});


const port = 3000;


app.listen(port, () => console.log(`Server started on port ${port}`));




FIle Name : app.js

const app = angular.module('myApp', []);


app.controller('myCtrl',
    function($scope, $http)
    {
        $http.get('http://localhost:3000/comments').then(function(response) {
        $scope.comments = response.data;
    });


  $scope.addComment = function()
  {
    $http.post('http://localhost:3000/comments', $scope.newComment).then(function(response) {
      $scope.comments.push(response.data);
      $scope.newComment = {};
    });
  };
});




File Name : index.html

<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>Comments</title>
    <link rel="stylesheet" href="style.css">
  </head>
  <body ng-app="myApp" ng-controller="myCtrl">
    <h1>Comments</h1>
    <div ng-repeat="comment in comments">
      <p>{{comment.name}}</p>
      <p>{{comment.message}}</p>
    </div>
    <form ng-submit="addComment()">
      <input type="text" ng-model="newComment.name" placeholder="Name" required><br>
      <textarea ng-model="newComment.message" placeholder="Message" required></textarea><br>
      <input type="submit" value="Add Comment">
    </form>
    <script src="angular.min.js"></script>
    <script src="app.js"></script>
    <script src="server.js"></script>
  </body>
</html>





Practical - 8
Aim : Create a simple HTML “Hello World” Project using AngularJS Framework and apply
ng-controller, ng-model and expressions

<!DOCTYPE html>
<html ng-app="helloWorldApp">
<head>
    <title>Hello World</title>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js"></script>
</head>
<body>
    <div ng-controller="helloWorldController">
        <h1>{{greeting}}</h1>
        <input type="text" ng-model="name" placeholder="Enter your name">
        <button ng-click="updateGreeting()">Update Greeting</button>
    </div>


    <script>
        var app = angular.module('helloWorldApp', []);
        app.controller('helloWorldController',
        function($scope)
        {
            $scope.greeting = 'Hello World!';
            $scope.updateGreeting = function()
            {
                $scope.greeting = 'Hello ' + $scope.name + '!';
            };
        });
    </script>
</body>
</html>





